{% extends 'cruud.html.twig' %}


{% block body %}

    <div class="card-body">
        <h4 class="card-title">Ajouter un produit</h4>


        {{ form_start(f,{'attr': {'novalidate': 'novalidate'}}) }}





        <form class="forms-sample">

            <link rel="stylesheet" href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css">



            <div class="stars">
                {{ form_label(f.reference, 'reference', ) }}

             {#    <i class="lar la-star" data-value="1"   ></i>
                <i class="lar la-star" data-value="2" {{ form_widget(f.reference, {'attr': {'class': 'form-control','placeholder': 'reference'}}) }}   ></i>
                <i class="lar la-star" data-value="3" {{ form_widget(f.reference, {'attr': {'class': 'form-control','placeholder': 'reference'}}) }}   ></i>
                <i class="lar la-star" data-value="4" {{ form_widget(f.reference, {'attr': {'class': 'form-control','placeholder': 'reference'}}) }}   ></i>
                <i class="lar la-star" data-value="5" {{ form_widget(f.reference, {'attr': {'class': 'form-control','placeholder': 'reference'}}) }}   ></i>
                #}
                {{ form_widget(f.reference, {'attr': {'class': 'form-control','placeholder': 'reference'}}) }}


            </div>



            <div class="form-group">
                {{ form_label(f.nom, 'nomz', ) }}
                {{ form_widget(f.nom, {'attr': {'class': 'form-control','placeholder': 'nom'}}) }}
                {{ form_errors(f.nom) }}

            </div>
            <div class="form-group">
                {{ form_label(f.marque, 'marque', ) }}
                {{ form_widget(f.marque, {'attr': {'class': 'form-control','placeholder': 'marque'}}) }}
                {{ form_errors(f.marque) }}

            </div>
            <div class="form-group">
                {{ form_label(f.prix, 'prix', ) }}
                {{ form_widget(f.prix, {'attr': {'class': 'form-control','placeholder': 'prix'}}) }}
                {{ form_errors(f.prix) }}

            </div>

            <div class="form-group">
                {{ form_label(f.imageFile, 'Image du jeu', ) }}
                <div class="input-group grid-col--4">
                    <input type="text" class="form-control file-upload-info" disabled>
                    <span class="input-group-append">
{{ form_row(f.imageFile,{'attr': {'class': 'form-control file-upload-browse btn btn-primary' }}) }}
                        {{ form_errors(f.imageFile) }}
</span>
                </div>
            </div>

            <div class="form-group">
                {{ form_label(f.categorie, 'categorie', ) }}
                {{ form_widget(f.categorie, {'attr': {'class': 'class="dropdown-item"','placeholder': 'categorie'}}) }}
            </div>

             {#

             <div onchange="changeOptions(this)" class="form-group">
               {{ form_widget(f.categorie, {'label': "Select Category", 'attr': {'class': "form-control"} }) }}
           </div>


            <select onchange="changeOptions(this)">
               <option value="" selected="selected"></option>
               <option value="form_1">Form 1</option>
               <option value="pc">Form 2</option>
           </select>


           <form class="className" name="form_1" id="form_1" style="display:none">

                    </form>

           <form class="className" name="pc" id="pc" style="display:none">
               <div class="form-group">
                   {{ form_label(f.prix, 'prix', ) }}
                   {{ form_widget(f.prix, {'attr': {'class': 'form-control','placeholder': 'prix'}}) }}
               </div>
           </form>
             #}





            <div class="form-group">
                {{ form_label(f.type, 'description', ) }}
                {{ form_widget(f.type, {'attr': {'class': 'form-control','placeholder': 'description'}}) }}
                {{ form_errors(f.type) }}

            </div>




            <div class="form-check form-check-flat form-check-primary">
                <label class="form-check-label">
                    <input type="checkbox" class="form-check-input">
                    Remember me
                </label>
            </div>

            <div class="input-group col-md-6">
                {{ form_widget(f.submit, {'attr': {'class': 'form-control btn btn-primary mr-2' }}) }}
                {{ form_widget(f.cancel, {'attr': {'class': 'btn btn-danger' }}) }}
            </div>
            {{ form_end(f) }}
        </form>

    </div>






{% endblock %}
{% block js %}


    <script>
        window.onload = () => {
            // On va chercher toutes les étoiles
            const stars = document.querySelectorAll(".la-star");

            // On va chercher l'input
            const note = document.querySelector("#note");

            // On boucle sur les étoiles pour le ajouter des écouteurs d'évènements
            for(star of stars){
                // On écoute le survol
                star.addEventListener("mouseover", function(){
                    resetStars();
                    this.style.color = "red";
                    this.classList.add("las");
                    this.classList.remove("lar");
                    // L'élément précédent dans le DOM (de même niveau, balise soeur)
                    let previousStar = this.previousElementSibling;

                    while(previousStar){
                        // On passe l'étoile qui précède en rouge
                        previousStar.style.color = "red";
                        previousStar.classList.add("las");
                        previousStar.classList.remove("lar");
                        // On récupère l'étoile qui la précède
                        previousStar = previousStar.previousElementSibling;
                    }
                });

                // On écoute le clic
                star.addEventListener("click", function(){
                    note.value = this.dataset.value;
                });

                star.addEventListener("mouseout", function(){
                    resetStars(note.value);
                });
            }

            /**
             * Reset des étoiles en vérifiant la note dans l'input caché
             * @param {number} note
             */
            function resetStars(note = 0){
                for(star of stars){
                    if(star.dataset.value > note){
                        star.style.color = "black";
                        star.classList.add("lar");
                        star.classList.remove("las");
                    }else{
                        star.style.color = "red";
                        star.classList.add("las");
                        star.classList.remove("lar");
                    }
                }
            }
        }
    </script>

<script>

function changeOptions(selectEl) {
let selectedValue = selectEl.options[selectEl.selectedIndex].value;
let subForms = document.getElementsByClassName('className')
for (let i = 0; i < subForms.length; i += 1) {
if (selectedValue === subForms[i].name) {
subForms[i].setAttribute('style', 'display:block')
} else {
subForms[i].setAttribute('style', 'display:none')
}
}
}
</script>
{% endblock %}